// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResHub.Data;

#nullable disable

namespace ResHub.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240702180216_identityUser")]
    partial class identityUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ResHub.Models.EventResidence", b =>
                {
                    b.Property<int>("ResidenceId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.HasKey("ResidenceId", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("EventResidents");
                });

            modelBuilder.Entity("ResHub.Models.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfEvent")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("ResHub.Models.Residence", b =>
                {
                    b.Property<int>("ResId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BusAdmin")
                        .HasColumnType("longtext");

                    b.Property<string>("Capacity")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HouseComm")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RA")
                        .HasColumnType("longtext");

                    b.HasKey("ResId");

                    b.ToTable("Residence");
                });

            modelBuilder.Entity("ResHub.Models.StudentResident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ResidenceId")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ResidenceId");

                    b.HasIndex("StudentNumber")
                        .IsUnique();

                    b.ToTable("Residents");
                });

            modelBuilder.Entity("ResHub.Models.EventResidence", b =>
                {
                    b.HasOne("ResHub.Models.Events", "Event")
                        .WithMany("EventResidences")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResHub.Models.Residence", "Residence")
                        .WithMany("EventResidences")
                        .HasForeignKey("ResidenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Residence");
                });

            modelBuilder.Entity("ResHub.Models.StudentResident", b =>
                {
                    b.HasOne("ResHub.Models.Residence", "Residence")
                        .WithMany("StudentResidents")
                        .HasForeignKey("ResidenceId");

                    b.Navigation("Residence");
                });

            modelBuilder.Entity("ResHub.Models.Events", b =>
                {
                    b.Navigation("EventResidences");
                });

            modelBuilder.Entity("ResHub.Models.Residence", b =>
                {
                    b.Navigation("EventResidences");

                    b.Navigation("StudentResidents");
                });
#pragma warning restore 612, 618
        }
    }
}
